// @Library("devops-gsl-pipelines")_


def containerBuildStages = [failFast: false]
String branchName = env.CHANGE_ID ? env.CHANGE_BRANCH : env.BRANCH_NAME
def branch = (env.CHANGE_ID) ? env.CHANGE_BRANCH : env.BRANCH_NAME;
def changes = []
def whatToBuild = []
def gitHash

def getPRChangelog() {
    return sh(
            script: "git --no-pager diff origin/master --name-only",
            returnStdout: true
    ).split('\n')
}

def getChangedDirectories(changeLog) {
    return changeLog
        .findAll{ it.contains("/") } // Must be directory
        .collect{ it.split("/").init().join("/") } // Skip filename
        .unique()
}

// AgentWorker 
node() {
    stage("Discovering Changes") {
        cleanWs()
        checkout([
            $class: 'GitSCM',
            branches: scm.branches + [[name: '*/master']],
            userRemoteConfigs: scm.userRemoteConfigs
        ])
        currentBuild.description = "Pushed containers:<br>"        
    }
}

ansiColor('xterm') {
    // timeout(30) {
    //     parallel containerBuildStages
    // }
}
