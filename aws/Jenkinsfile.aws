#!/usr/bin/env groovy

pipeline {
    agent any 

    options {
        timestamps()
    }


    environment {
        TEST_PREFIX = "test-IMAGE"
        // TEST_IMAGE = "${env.TEST_PREFIX}:${env.BUILD_NUMBER}"
        // TEST_CONTAINER = "${env.TEST_PREFIX}-${env.BUILD_NUMBER}"
        // REGISTRY_ADDRESS = "my.registry.address.com"

        // SLACK_CHANNEL = "#deployment-notifications"
        // SLACK_TEAM_DOMAIN = "MY-SLACK-TEAM"
        // SLACK_TOKEN = credentials("slack_token")
        // DEPLOY_URL = "https://deployment.example.com/"

        // COMPOSE_FILE = "docker-compose.yml"
        // REGISTRY_AUTH = credentials("docker-registry")
        /// STACK_PREFIX = "my-project-stack-name"
    }    

    stages {
        stage("DockerFileChecks") {
            parallel {
                stage('Lints'){
                    steps {
                        sh "echo  helloworldPrepare"
                    }
                } 
                stage('Sonar Scan'){
                    steps {
                        sh "echo  helloworldPrepare2"
                    }
                }
                stage('Prep3'){
                    steps {
                        sh "echo  helloworldPrepare3"
                    }
                } 
            }       
        }
        stage('BuildPushImage'){
            steps {
                dir('aws/eks-kube-hunter'){
                    sh 'docker build -t 658951324167.dkr.ecr.eu-west-1.amazonaws.com/eks-kube-hunter:v0.1 .'
                    // sh 'ECR_LOGIN=$(aws ecr get-login-password --region eu-west-1)'
                    // sh 'docker login -u AWS -p "${ECR_LOGIN}" 658951324167.dkr.ecr.eu-west-1.amazonaws.com'                    
                    sh 'docker push 658951324167.dkr.ecr.eu-west-1.amazonaws.com/eks-kube-hunter:v0.1'

                    sh 'pwd && ls -l'
                }
            }
        }       
    }  
    post {
        always {
            sh "echo AlwaysRuns"
        }

        success {
            sh "echo RunsUponSuccess"
        }

        failure {
            mail to: 'phelun@yahoo.com',
                    subject: "Failed Pipeline: ${currentBuild.fullDisplayName}",
                    body: "Something is wrong with ${env.BUILD_URL}"
        }
    }      

}